class Solution {
public:
    int aroundCenter(string s, int i, int j){
        while (i >= 0 && j < s.length())
        {
            if (s.at(i) == s.at(j)){
                i--;
                j++;
            }
            else{
                break;
            }
        }
        return j - i - 1;
    }

    string longestPalindrome(string s) {
        if (s.length() == 0){
            return "";
        }
        int start = 0, end = 0, len;
        for (int i = 0; i < s.length(); ++i){
            int len1 = aroundCenter(s, i, i);
            int len2 = aroundCenter(s, i, i + 1);
            len = len1 > len2 ? len1 : len2;
            if (len > end - start){
                end = i + len / 2;
                start = end - len + 1;
            }		 
        }
        return s.substr(start, end - start + 1);
    }
};
