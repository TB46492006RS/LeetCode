/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if (k < 2)return head;
        ListNode* pre = new ListNode(-1);
        pre->next = head;
        ListNode* tpre = pre;
        while (1){
            ListNode* t = tpre;
            int r = 0;
            while (r++ != k&&t->next)
                t = t->next;
            if (r != k + 1)break;
            else{
                int i = 1;
                ListNode* temb = tpre->next;
                ListNode* teme = temb;
                while (i++ != k){		//reverse		
                    tpre->next = teme->next;
                    teme->next = teme->next->next;
                    tpre->next->next = temb;
                    temb = tpre->next;
                }
                tpre = teme;//move pre pointer
            }
        }
        return pre->next;
    }
};
