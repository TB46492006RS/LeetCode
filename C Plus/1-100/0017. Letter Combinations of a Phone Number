class Solution {
public:
    vector<string> letterCombinations(string digits) {
        if (digits == "")
            return{};
        vector<string> res, res2;
        map<char, vector<string>> map = { { '2', { "a", "b", "c" } }, { '3', { "d", "e", "f" } },
        { '4', { "g", "h", "i" } }, { '5', { "j", "k", "l" } }, { '6', { "m", "n", "o" } },
        { '7', { "p", "q", "r", "s" } }, { '8', { "t", "u", "v" } }, { '9', { "w", "x", "y", "z" } } };
        for (auto it = digits.cbegin(); it != digits.cend();++it)
        {
            if (!res.size())
            {
                res.assign(map.at(*it).cbegin(), map.at(*it).cend());
                //vector<string> tem = map.at(*it);
                //for (string c:tem)
                //{
                //	res.push_back(c);
                //}
            }
            else
            {
                vector<string> tem = map.at(*it);			
                for (auto s:res)
                {
                    for (auto c:tem)
                    {
                        res2.push_back(s + c);
                    }
                }
                res.swap(res2);
                res2.clear();
            }
        }
        return res;
    }
};
